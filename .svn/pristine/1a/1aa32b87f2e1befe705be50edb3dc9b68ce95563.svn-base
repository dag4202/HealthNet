from django.shortcuts import render, render_to_response
from django.http import HttpResponse, HttpResponseRedirect
from django.contrib.auth.models import User,Group, Permission
from django.template import RequestContext
from django.contrib.auth.decorators import login_required
from main.models import LogEntry
from django.forms.models import modelformset_factory
from main_patient.models import Patient
from main_patient.forms import Patient_Profile_Form, UserForm, PatientProfileForm
import logging

logger = logging.getLogger(__name__)

@login_required
def profile(request):
	logger.info("patient profile accessed")
	cont = RequestContext(request)
	context_dict = {}
	u = User.objects.get(username=request.user)

	try:
		up = UserProfile.objects.get(user=u)
	except:
		up = None

		context_dict['user'] = u
		context_dict['userprofile'] = up
		return render(request, 'register.html', context_dict, cont)

def Register(request):
	context = RequestContext(request)

	registered = False
	PatientFormset = modelformset_factory(Patient,form = PatientProfileForm,exclude=("user",),extra = 0)

	if request.method == 'POST':
		user_form = UserForm(data=request.POST)
		#patient_form = PatientProfileForm(data = request.POST)

		formset = PatientFormset(request.POST)
		if user_form.is_valid() and formset.is_valid():
			user = user_form.save()
			user.set_password(user.password)
			user.save()
			
			user.groups.add(Group.objects.get(name='Patient'))

			entries = formset.save(commit = False)
			for entry in entries:
				entry.user = user
				entry.save()

			# profile = patient_form.save(commit = False)
			# profile.user = user
			# profile.save()

			#entry = LogEntry(username=request.POST['username'], datetime=timezone.now(), description='user login')
			#entry.save()
			registered = True
		else:
			print(user_form.errors)

			#print(user_form.errors, patient_form.errors)
	else:

		user_form = UserForm()
		formset = PatientFormset()
		# patient_form = PatientProfileForm()

	return render(request,'register.html',{'user_form': user_form,'patient_form':formset , 'registered':
								registered})
	# return render(request,'name.html',{'user_form': user_form, 'patient_form': patient_form, 'registered':
	# 							registered})
@login_required
def Modify_Profile(request):
	context = RequestContext(request)
	Updated = False
	PatientFormset = modelformset_factory(Patient,form = PatientProfileForm, exclude=("user",),extra = 0)

	if request.method == 'POST':
		#user_form = UserForm(data=request.POST)
		#patient_form = PatientProfileForm(data = request.POST)

		formset = PatientFormset(request.POST)
		if formset.is_valid():#user_form.is_valid() and formset.is_valid():
			

			entries = formset.save(commit = False)
			for entry in entries:
				entry.user = request.user
				entry.save()

			# profile = patient_form.save(commit = False)
			# profile.user = user
			# profile.save()

			#entry = LogEntry(username=request.POST['username'], datetime=timezone.now(), description='user login')
			#entry.save()
			Updated = True
		else:
			print(user_form.errors)

			#print(user_form.errors, patient_form.errors)
	else:

		#user_form = UserForm()
		formset = PatientFormset()
		# patient_form = PatientProfileForm()

	return render(request,'update.html',{'patient_form':formset , 'Updated':
								Updated})
	# return render(request,'update.html',{'user_form': user_form,'patient_form':formset , 'Updated':
	# 							Updated})